<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://video-metadata.tv4.se/event/v1"
           xmlns:common="http://video-metadata.tv4.se/common/v1"
           targetNamespace="http://video-metadata.tv4.se/event/v1" elementFormDefault="qualified"
           attributeFormDefault="unqualified" version="1.0"
        >
    <xs:import namespace="http://video-metadata.tv4.se/common/v1" schemaLocation="common.xsd"/>

    <!-- ROOT element -->
    <xs:element name="event" type="eventType">
        <xs:annotation>
            <xs:documentation>root node of event</xs:documentation>
        </xs:annotation>
    </xs:element>
    <!-- types -->
    <xs:complexType name="basicEventType">
        <xs:annotation>
            <xs:documentation>
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="id" type="common:idType">
                <xs:annotation>
                    <xs:documentation>Per provider unique id for the event.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="channelId" type="common:idType">
                <xs:annotation>
                    <xs:documentation>Channel id , e.g. 'se.tv4play', se.cmore
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="deviceType" type="common:deviceTypeType">
                <xs:annotation>
                    <xs:documentation>if null, then generic and valid for all
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <!-- TODO: undersök om productGroup ska byta namn till product, då det är vad den kallas för i övriga EMP system. JIRA:OVPMD-34  -->
            <xs:element name="productGroup" type="common:productGroupType" minOccurs="1"/>

            <xs:element name="hidden" type="xs:boolean" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Indicates if this event is hidden, i.e. if it should not be public.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="groupId" type="eventGroupType" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>If the event have natural many parts mark them with the same groupId, for instance
                        a soccer game that have two halfs.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="startTime" type="xs:dateTime">
                <xs:annotation>
                    <xs:documentation>Time when program starts or vod is possible to start play.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="endTime" type="xs:dateTime">
                <xs:annotation>
                    <xs:documentation>Time when program ends or vod is no longer possible to play.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="publishTime" type="xs:dateTime" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Time when the program/vod information can be exposed to the customer. Vod can not
                        be played until startTime. If publish is
                        after start or empty (nil), then publishTime = startTime.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <!-- TODO: Moved to Content, to be deleted in next release of the XSD -->
            <xs:element name="duration" type="xs:int" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Deprecated: duration moved to Content.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>

        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="embeddedEventType">
        <xs:annotation>
            <xs:documentation>
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="basicEventType">
                <xs:sequence>
                    <!-- TODO: is this data needed in emport? -->
                    <xs:element name="contentIdRef" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Reference to contentId for this event for convenience as this could be
                                obtained via materialIdRef. Warning. This id is
                                redundant as the material also points out the content! They should be verified to be the
                                same.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <!-- TODO: Remove unused element in export. No data available -->
                    <xs:element name="materialIdRef" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>reference to contentId for this event
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="eventType">
        <xs:complexContent>
            <xs:extension base="embeddedEventType">
                <xs:attribute name="timestamp" type="xs:dateTime" use="required">
                    <xs:annotation>
                        <xs:documentation>Timestamp when document is created
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="embeddedEventListType">
        <xs:sequence>
            <xs:element name="event" type="embeddedEventType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="basicEventListType">
        <xs:sequence>
            <xs:element name="event" type="basicEventType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="eventListType">
        <xs:sequence>
            <xs:element name="event" type="eventType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="descriptionListLangType">
        <xs:sequence>
            <xs:element name="description" type="common:description" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="eventGroupType">
        <xs:annotation>
            <xs:documentation>The element value is the name of the group. The sequenceNumber attribute gives the order
                in which the events should been viewed,
                if not given implicitly by the time.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="common:idType">
                <xs:attribute name="sequenceNumber" type="xs:short">
                    <xs:annotation>
                        <xs:documentation>Order of event in the event group, one-based indexing. (first event in event group has sequenceNumber=1)</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <!-- TODO: discuss new field with with Metabanken -->
                <xs:attribute name="maxSequenceNumber" type="xs:short">
                    <xs:annotation>
                        <xs:documentation>sequenceNumber of the last event in the evenet group</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
</xs:schema>
