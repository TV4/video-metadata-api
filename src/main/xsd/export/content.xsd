<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://video-metadata.tv4.se/content/v1" xmlns:common="http://video-metadata.tv4.se/common/v1"
	xmlns:tagging="http://video-metadata.tv4.se/tagging/v1" targetNamespace="http://video-metadata.tv4.se/content/v1" version="1.0">
    <!-- TODO: Update xml namespace for import and export schemas. They are currently in same XML namespace. :facepalm: ^ [-X -->
	<xs:import namespace="http://video-metadata.tv4.se/common/v1" schemaLocation="common.xsd" />
	<xs:import namespace="http://video-metadata.tv4.se/tagging/v1" schemaLocation="tagging.xsd" />

	<!-- -->
	<xs:element name="content" type="contentSeasonBrandType">
		<xs:annotation>
			<xs:documentation>Root element for content object</xs:documentation>
		</xs:annotation>
	</xs:element>
	<!-- -->
	<xs:complexType name="contentSeasonBrandType">
		<xs:sequence>
			<xs:element name="brand" type="brandType" minOccurs="0" />
			<xs:element name="season" type="seasonType" minOccurs="0" />
			<xs:element name="content" type="contentType" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="abstractContentType" abstract="true">
		<xs:annotation>
			<xs:documentation>Abstract type that holds attributes common to brand, season and content</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="id" type="common:idType">
				<xs:annotation>
					<xs:documentation>unique id for asset, unique within each provider
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="studio" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Name of production studio.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="productionYear" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[1-2][0-9][0-9][0-9]" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="countryOfOriginList" type="common:countryListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>list of production countries. Use country codes in IS0 3166-1-alpha-2
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="titleList" type="titleListType">
				<xs:annotation>
					<xs:documentation>Title list for content. At least one occurrence with the language used in the
						market/country displaying the content.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="descriptionList" type="descriptionListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>List of descriptions
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="commentList" type="commentListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>List of comments, that is internal descriptions not to show externally.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="tagList" type="tagListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>list of tags for the content.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="creditList" type="creditListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>list of actors, producers etc. should be consistent within each provider
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="posterImage" type="imageType" minOccurs="0" />
			<xs:element name="landscapeImage" type="imageType" minOccurs="0" />
			<xs:element name="logoImage" type="imageType" minOccurs="0" />
			<xs:element name="promoImage" type="imageType" minOccurs="0" />
			<xs:element name="bannerImage" type="imageType" minOccurs="0" />
			<xs:element name="cinemascopeImage" type="imageType" minOccurs="0" />
			<xs:element name="logoHomeTeam" type="imageType" minOccurs="0" />
			<xs:element name="logoAwayTeam" type="imageType" minOccurs="0" />
			<!-- TODO: BegrÃ¤nsa genre till att inte vara en lista i kommande version av XSD. -->
			<xs:element name="genreList" type="genreListType" minOccurs="0" />
			<xs:element name="parentalRatingList" type="parentalRatingListType" minOccurs="0" />
			<xs:element name="externalReferenceList" type="common:externalReferenceListType" minOccurs="0">
				<xs:annotation>
					<!-- TODO: fix doc question marks -->
					<xs:documentation>List of externalReference (of what?)
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="additionalProperties" type="common:propertyListType" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="brandType">
		<xs:complexContent>
			<xs:extension base="abstractContentType">
				<xs:sequence>
					<xs:annotation>
						<xs:documentation>Set in EMP by editor, legal requirement if brand is sponsored.
						</xs:documentation>
					</xs:annotation>
					<xs:element name="sponsored" type="xs:boolean" default="false" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="seasonType">
		<xs:complexContent>
			<xs:extension base="abstractContentType">
				<xs:sequence>
					<xs:element name="brandId" type="common:idType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>id for season, not unique</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="seasonNumber" type="xs:long" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Season number for the brand.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="numberOfEpisodes" type="xs:long" minOccurs="0">
						<xs:annotation>
							<xs:documentation>If the content belongs to a serie/season, this is the total number of episodes in
								that serie/season.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="contentType">
		<xs:complexContent>
			<xs:extension base="abstractContentType">
				<xs:sequence>
					<xs:element name="sport" type="sportType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Informationa about tournament, round and teams for sport or entertainment programs.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="vmanId" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>VMAN id for asset.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="videoId" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>EMP id for asset stream.
								Will be non present until content has a video ID assosiated with it.
								Video will be constructed by prefix/suffix the content.id with a provider code.
								E.g., provider TV4 has provider code = "1423" and content.id = 1234567890 => videoId = 1234567890_1423.
								The exact format is under discussion (15/5-15). Underscore to be replaced by hypen '-' (due to SEO) (and possibly the suffix to be replaced by a prefix).
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="duration" type="xs:int" minOccurs="0" >
						<xs:annotation>
							<xs:documentation>
								Duration of the video content in seconds. Ads not expected to be included in the duration.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="live" type="xs:boolean" minOccurs="0" default="false">
						<xs:annotation>
							<xs:documentation>Flag to indicates if this stream is a live stream.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="webExclusive" type="xs:boolean" minOccurs="0" default="false">
						<xs:annotation>
							<xs:documentation>Flag to indicates if this content is web exclusive, no linear broadcast in the given channel.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="contentType" type="contentTypeType" minOccurs="0" >
						<xs:annotation>
							<xs:documentation>ToDo: changed value set in VCMS.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="brandId" type="common:idType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>id for season, not unique</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="seasonId" type="common:idType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>id for season, not unique. Only present if content is connected to a season.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="spokenLanguagesList" type="languageListType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>List of available languages for available video soundtracks.
                                (In import format this information is on the material/audioList.)
							</xs:documentation>
						</xs:annotation>
					</xs:element>
                    <xs:element name="subtitleLanguagesList" type="languageListType" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>List of available languages for available video subtitles.
                                (In import format this information is on the material/subtitleList.)
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
					<xs:element name="addProviderLogo" type="xs:boolean" default="true">
						<xs:annotation>
							<xs:documentation>Information to the client if the player shall add the default logo (tv4play) to
								the video when playing.
								Set to false if video already has a logo in the
								video.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="allowShare" type="xs:boolean" default="true">
						<xs:annotation>
							<xs:documentation>Information to the client if the social media sharing functions shall be disabled (default true).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hideAds" type="xs:boolean" default="false">
						<xs:annotation>
							<xs:documentation>Information to client if presentation in GUI shall be without ads.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="drmRestrictions" type="xs:boolean" default="true">
                        <xs:annotation>
                            <xs:documentation>true:=video is DRM protected, player need to initialize differently.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                <xs:element name="publicationRights" type="publicationRightsType">
                    <xs:annotation>
                        <xs:documentation></xs:documentation>
                    </xs:annotation>
                </xs:element>
					<xs:element name="contentIdRef" type="common:idType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference to other content entity that is related. Thought use is for a clip or
								trailer to reference the original content.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="episodeNumber" type="xs:long" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Episode number for the program or "null" if no episode information.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="publicationRightsType">
		<xs:complexContent>
			<xs:extension base="common:rightsType">
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="contentTypeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="episode" />
			<xs:enumeration value="movie" />
			<xs:enumeration value="trailer" />
			<xs:enumeration value="clip" />
			<xs:enumeration value="ad" />
			<xs:enumeration value="other" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="titleListType">
		<xs:sequence>
			<xs:element name="title" type="titleType" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="descriptionListType">
		<xs:annotation>
			<xs:documentation>Editorial text that describes the content, can be publically published.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="descriptionType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="commentListType">
		<xs:annotation>
			<xs:documentation>Editorial description that shall not be published, but it can be indexed in a search. Thought
				usage is to write down descriptive intro, manuscript or voice-over
				that applies to the content, Text is not
				required to be written to be ready for public view, but the content will be indexed and possible to use in a
				search.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="comment" type="descriptionType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="parentalRatingListType">
		<xs:sequence>
			<xs:element name="parentalRating" type="parentalRatingType" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="parentalRatingType">
        <xs:annotation>
            <xs:documentation>
                See http://en.wikipedia.org/wiki/Motion_picture_rating_system for more information about parental ratings.
            </xs:documentation>
        </xs:annotation>
		<xs:sequence>
			<xs:element name="age" type="xs:long" default="0">
                <xs:annotation>
                    <xs:documentation>
                        Parental rating age in year.
                        0 years => No restriction.
                        Also see http://en.wikipedia.org/wiki/Motion_picture_rating_system for
                        more information.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
			<xs:element name="ratingCode" type="xs:string" minOccurs="0" maxOccurs="unbounded" >
                <xs:annotation>
                    <xs:documentation>
                        Rating code that motivates the parental guidance.
                        Code to descriptive text is mapped in client GUI.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
		</xs:sequence>
        <xs:attribute name="country" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>
                    Two char country code accoring to ISO 3166-1-alpha-2.
                    Empty or absent country attribute has the meaning that it is global default value for any country.
                    Specific country declaration overrides the default.
                    If country value is repeted, result is undefined which one to select.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
	</xs:complexType>
	<xs:complexType name="tagListType">
		<xs:sequence>
			<xs:element name="tag" type="tagging:tagReferenceType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="simpleTitleType">
		<xs:simpleContent>
			<xs:restriction base="simpleTextType">
				<xs:maxLength value="100" />
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="titleType">
		<xs:simpleContent>
			<xs:extension base="untypedTitleType">
				<xs:attribute name="type" type="titleTypeType">
					<xs:annotation>
						<xs:documentation>Marks a title as the original title
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="titleTypeType">
		<xs:annotation>
			<xs:documentation>
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="press" />
			<xs:enumeration value="original" />
			<xs:enumeration value="episode" />
			<xs:enumeration value="season" /> <!-- unknown usage, added just to get symmetry for Content Season and Brand -->
			<xs:enumeration value="brand" /> <!-- unknown usage -->
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="untypedTitleType">
		<xs:simpleContent>
			<xs:restriction base="localizedTextType">
				<xs:maxLength value="300" />
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="descriptionType">
		<xs:simpleContent>
			<xs:extension base="untypedDescriptionType">
				<xs:attribute name="length" type="descriptionLengthType" use="optional">
					<xs:annotation>
						<xs:documentation>
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="descriptionLengthType">
		<xs:annotation>
			<xs:documentation>length (and content) of the description e.g, tiny may be 1-25 characters, short 26-140,medium
				141-240, long 241-999, extended > 1000
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="slug" />
			<xs:enumeration value="tiny" />
			<xs:enumeration value="short" />
			<xs:enumeration value="medium" />
			<xs:enumeration value="long" />
			<xs:enumeration value="extended" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="untypedDescriptionType">
		<xs:simpleContent>
			<xs:restriction base="localizedTextType">
				<xs:maxLength value="3000" />
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="localizedTextType">
		<xs:annotation><xs:documentation>Localized text element with language attribute.</xs:documentation></xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="language" type="xs:language">
					<xs:annotation>
						<xs:documentation>code in ISO 639-1</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="creditListType">
		<xs:sequence>
			<xs:element name="credit" type="creditType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="creditType">
		<xs:sequence>
			<xs:element name="name" type="xs:string" />
			<xs:element name="rolename" type="xs:string" minOccurs="0" />
			<xs:element name="function" type="xs:string" />
			<xs:element name="externalReferenceList" type="common:externalReferenceListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>List of externalReference
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="imageType">
		<xs:sequence>
			<xs:element name="url" type="xs:string" />
			<xs:element name="urlList" type="urlListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Support for different images for different languages/countries.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="width" type="xs:int">
				<xs:annotation>
					<xs:documentation>In unit px.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="height" type="xs:int">
				<xs:annotation>
					<xs:documentation>In unit px.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="captionList" type="captionListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="copyRightList" type="copyRightsListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="urlListType">
		<xs:sequence>
			<!-- type should not be description, rather a URL with a language attribute -->
			<xs:element name="url" type="common:description" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
    <xs:complexType name="languageListType">
        <xs:sequence>
            <xs:element name="language" type="xs:language" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>Language code in ISO 639-1</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
	<xs:complexType name="captionListType">
		<xs:sequence>
			<xs:element name="caption" type="common:description" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="copyRightsListType">
		<xs:sequence>
			<xs:element name="copyRight" type="common:description" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="mediaReferenceListType">
		<xs:sequence>
			<xs:element name="reference" type="mediaReferenceType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="mediaReferenceType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="priority" type="xs:int">
					<xs:annotation>
						<xs:documentation>lower priority number means higher importance
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
    <xs:complexType name="genreListType">
        <xs:sequence>
            <xs:element name="genre" type="genreType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>
	<xs:complexType name="genreType">
		<xs:annotation>
			<xs:documentation> Two levels of genres are supported: mainGenre and
				subGenre.
				Genre is not to be confused with "Category" that is a classification code defined as tags.
                Genre is typically provided by external parties, e.g. IMDB.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="mainGenre" type="xs:string" />
			<xs:element name="subGenre" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<!-- Removed - replaced by a main and sub category tag type
	<xs:complexType name="categoryType">
		<xs:annotation>
			<xs:documentation>
                Two levels of categorisations are supported: main and sub-category.
                Category is a classification code, a reference to a nid of the the typ mainCategory or subCategory.
                NB., category is NOT synonym with Genre.
            </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="mainCategory" type="common:nidType" />
			<xs:element name="subCategory" type="common:nidType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	-->
	<xs:complexType name="sportType">
		<xs:annotation>
			<xs:documentation>Sports tag that describes the sport event: serie, league, tournament or any other sport
				event.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="sportsCategory" type="sportsCategoryType" minOccurs="0" />
			<xs:element name="leagueOrCompetitionList" type="leagueOrCompetitionListType" minOccurs="0" />
			<xs:element name="seasonOrTournamentList" type="seasonOrTournamentList" minOccurs="0" />
			<xs:element name="roundOrEpisodeList" type="roundOrEpisodeListType" minOccurs="0" />
			<xs:element name="homeTeamList" type="teamListType" minOccurs="0" />
			<xs:element name="awayTeamList" type="teamListType" minOccurs="0" />
			<xs:element name="arenaOrCourseList" type="teamListType" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="sportsCategoryType">
		<xs:simpleContent>
			<xs:restriction base="simpleTextType">
				<xs:maxLength value="40" />
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="leagueOrCompetitionListType">
		<xs:sequence>
			<xs:element name="leagueOrCompetition" type="leagueOrCompetitionType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="leagueOrCompetitionType">
		<xs:simpleContent>
			<xs:restriction base="simpleTextType">
				<xs:maxLength value="40" />
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="seasonOrTournamentList">
		<xs:sequence>
			<xs:element name="roundOrEpisode" type="roundOrEpisodeType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="seasonOrTournamentType">
		<xs:simpleContent>
			<xs:restriction base="simpleTextType">
				<xs:maxLength value="40" />
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="roundOrEpisodeListType">
		<xs:sequence>
			<xs:element name="roundOrEpisode" type="roundOrEpisodeType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="roundOrEpisodeType">
		<xs:simpleContent>
			<xs:restriction base="simpleTextType">
				<xs:maxLength value="40" />
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="teamListType">
		<xs:sequence>
			<xs:element name="team" type="teamType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="teamType">
		<xs:simpleContent>
			<xs:restriction base="simpleTextType">
				<xs:maxLength value="40" />
			</xs:restriction>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="simpleTextType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="language" type="xs:language">
					<xs:annotation>
						<xs:documentation>code in ISO 639-1</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="brandListType">
		<xs:sequence>
			<xs:element name="brand" type="brandType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>content for this event, optional. if not set contentIdRef must be set
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="seasonListType">
		<xs:sequence>
			<xs:element name="season" type="seasonType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>content for this event, optional. if not set contentIdRef must be set
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="contentListType">
		<xs:sequence>
			<xs:element name="content" type="contentType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Content for this event, optional. if not set contentIdRef must be set
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
