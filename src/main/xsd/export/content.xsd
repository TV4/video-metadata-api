<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://video-metadata.tv4.se/content/v1" xmlns:common="http://video-metadata.tv4.se/common/v1"
	xmlns:tagging="http://video-metadata.tv4.se/tagging/v1" targetNamespace="http://video-metadata.tv4.se/content/v1" version="1.0">
    <!-- TODO: Update xml namespace for import and export schemas. They are currently in same XML namespace. :facepalm: ^ [-X -->
	<xs:import namespace="http://video-metadata.tv4.se/common/v1" schemaLocation="common.xsd" />
	<xs:import namespace="http://video-metadata.tv4.se/tagging/v1" schemaLocation="tagging.xsd" />

    <!-- -->
    <!-- TODO: Remove unused element. -->
    <xs:element name="content" type="contentSeasonBrandType">
        <xs:annotation>
            <xs:documentation>Root element for content object. Only used for testing.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <!-- -->
    <xs:complexType name="contentSeasonBrandType">
        <xs:sequence>
            <xs:element name="brand" type="brandType" minOccurs="0"/>
            <xs:element name="season" type="seasonType" minOccurs="0"/>
            <xs:element name="content" type="contentType" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="abstractContentType" abstract="true">
        <xs:annotation>
            <xs:documentation>Abstract type that holds attributes common to brand, season and content</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="id" type="common:idType">
                <xs:annotation>
                    <xs:documentation>unique id for asset, unique within each provider
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <!--
                TODO: Suggested new element, in addition the id shall be changed to the EMPs asset Id.
                Alternative is to use the externalReference list.
            <xs:element name="sourceId">
                <xs:complexType >
                    <xs:sequence>
                        <xs:element name="provider" type="common:idType">
                            <xs:annotation>
                                <xs:documentation>Copy value from import message.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="id" type="common:idType">
                            <xs:annotation>
                                <xs:documentation>Copy value from import message.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            -->
            <xs:element name="studio" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Name of production studio.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <!-- TODO: Unused for brands. -->
            <xs:element name="productionYear" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:pattern value="[1-2][0-9][0-9][0-9]"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="countryOfOriginList" type="common:countryListType" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>list of production countries. Use country codes in IS0 3166-1-alpha-2
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="titleList" type="titleListType">
                <xs:annotation>
                    <xs:documentation>Title list for content. At least one occurrence with the language used in the
                        market/country displaying the content.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="descriptionList" type="descriptionListType" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>List of descriptions
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
			<xs:element name="internalDescription" type="internalDescriptionType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Internal text related to the content.
						Will be indexed in search but and searchable, original text	will not be exposed in search.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
            <xs:element name="tagList" type="tagListType" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>list of tags for the content.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="creditList" type="creditListType" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>list of actors, producers etc. should be consistent within each provider
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="imageList" type="imageListType" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>list of content related images.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <!-- TODO: Undersök om det går att begränsa genre till att inte vara en lista i kommande version av XSD, utan endast en genre. -->
            <xs:element name="genreList" type="genreListType" minOccurs="0"/>
            <xs:element name="parentalRatingList" type="parentalRatingListType" minOccurs="0"/>
            <xs:element name="externalReferenceList" type="common:externalReferenceListType" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>List of externalReferences. IMDB ids, sport ...
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <!-- TODO: Unknown usage - can we remove it? -->
            <xs:element name="additionalProperties" type="common:propertyListType" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="brandType">
        <xs:annotation>
            <xs:documentation>
                No special attributes on brand.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="abstractContentType">
                <xs:sequence>
                    <!-- No extra elements or attributes. -->
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="seasonType">
        <xs:complexContent>
            <xs:extension base="abstractContentType">
                <xs:sequence>
                    <!-- TODO: verify which id EMP use. EMP internal id or original id from provider? -->
                    <xs:element name="brandId" type="common:idType" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>id for season, not unique</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="seasonNumber" type="xs:long" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Season number for the brand.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="numberOfEpisodes" type="xs:long" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>If the content belongs to a serie/season, this is the total number of
                                episodes in the series.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="contentType">
        <xs:complexContent>
            <xs:extension base="abstractContentType">
                <xs:sequence>
                    <!-- TODO: Remove element and put informaiton in externalReference. { type="vmanId", value="<vmanId>", locator="<VMAN or API4 url." } -->
                    <xs:element name="vmanId" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>VMAN id for asset. Can be removed in later releases.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="videoId" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>EMP id for asset stream.
                                Will be non present until content has a video ID associated with it.
                                Video will be constructed by prefix/suffix the content.id with a provider code.
                                E.g., provider TV4 has provider code = "1423" and content.id = 1234567890 => videoId =
                                1234567890_1423.
                                The exact format is under discussion (15/5-15). Underscore to be replaced by hyphen '-'
                                (due to SEO) (and possibly the suffix to be replaced by a prefix).
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="duration" type="xs:int" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Duration of the video content in seconds.
                                Ads not expected to be included in the duration.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="live" type="xs:boolean" minOccurs="0" default="false">
                        <xs:annotation>
                            <xs:documentation>Flag to indicates if this stream is a live stream.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="webExclusive" type="xs:boolean" minOccurs="0" default="false">
                        <xs:annotation>
                            <xs:documentation>Flag to indicates if this content is web exclusive, no linear broadcast in
                                the given channel.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="contentType" type="contentTypeType">
                        <xs:annotation>
                            <xs:documentation>ToDo: changed value set in VCMS.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="brandId" type="common:idType" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>id for season, not unique</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="seasonId" type="common:idType" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>id for season, not unique. Only present if content is connected to a
                                season.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="audioLanguagesList" type="languageListType" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>List of available languages for available video soundtracks.
                                (In import format this information is on the material/audioList.)
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="subtitleLanguagesList" type="languageListType" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>List of available languages for available video subtitles.
                                (In import format this information is on the material/subtitleList.)
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
					<xs:element name="addProviderLogo" type="xs:boolean" default="true">
						<xs:annotation>
							<xs:documentation>Information to the client if the player shall add the default logo (tv4play) to
                                the video when playing.
                                Set to false if video already has a logo in the
                                video.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="allowEmbed" type="xs:boolean" default="true">
                        <xs:annotation>
							<xs:documentation>Information to the client if the social media sharing functions shall be disabled (default true).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hideAds" type="xs:boolean" default="false">
						<xs:annotation>
                            <xs:documentation>Information to client if presentation in GUI shall be without ads.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="sponsored" type="xs:boolean" default="false">
                        <xs:annotation>
                            <xs:documentation>Information that program is sponsored. Radio- och tv-lag (2010:696) §7</xs:documentation>
						</xs:annotation>
					</xs:element>
                    <!-- TODO: Need for data? UC? -->
					<xs:element name="drmRestrictions" type="xs:boolean" default="true">
                        <xs:annotation>
                            <xs:documentation>true:=video is DRM protected, player need to initialize differently.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="publicationRights" type="publicationRightsType">
                        <xs:annotation>
                            <xs:documentation></xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <!-- TODO: om värde inte sparas i VCMS från import kan denna tas bort. -->
                    <xs:element name="contentIdRef" type="common:idType" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>contentIdRef copied from the import.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <!-- TODO: EMP support relations on season and brands. Push up in future releases? -->
					<xs:element name="relatesToList" type="relatesToListType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								List of links to other assets (content, season or brand).
							</xs:documentation>
						</xs:annotation>
					</xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="publicationRightsType">
        <xs:complexContent>
            <xs:extension base="common:rightsType">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- -->
    <xs:simpleType name="contentTypeType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="live-channel"/>
            <xs:enumeration value="live-event"/>
            <xs:enumeration value="episode"/>
            <xs:enumeration value="movie"/>
            <xs:enumeration value="trailer"/>
            <xs:enumeration value="clip"/>
            <xs:enumeration value="ad"/>
            <!-- TODO: remove unused values. What is the use case for 'other'? -->
            <xs:enumeration value="other"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- -->
    <xs:complexType name="titleListType">
        <xs:sequence>
            <xs:element name="title" type="titleType" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="descriptionListType">
        <xs:annotation>
            <xs:documentation>Editorial text that describes the content, can be published publicly.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="description" type="descriptionType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="internalDescriptionType">
        <xs:annotation>
            <xs:documentation>
                Editorial text such as manus text read by a reporter or transcript of what is said i the video.
                Thought usage is to hold descriptive intro, manuscript or voice-over that applies to the
                content.
                Original text is not expected to be exposed public, but it can be indexed by a search engine.
                Text is not required to be written to be ready for public view, but the content will be indexed and
                possible to use in a specific searches.
                WARNING. If indexed, then bad words and inappropriate language will be searchable.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="language" type="xs:language"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="relatesToListType">
        <xs:sequence>
            <xs:element name="relatesTo" type="relatesToType" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="relatesToType">
        <xs:sequence>
            <xs:element name="id" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Id of the linked resource, if a video asset, the videoId</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="type" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Type of the linked resource, in case of a video the contentType</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="relationType" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Type of link as specified in the VCMS.
                        Optional field that can specify how the videos are linked.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="parentalRatingListType">
        <xs:sequence>
            <xs:element name="parentalRating" type="parentalRatingType" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="parentalRatingType">
        <xs:annotation>
            <xs:documentation>
                See http://en.wikipedia.org/wiki/Motion_picture_rating_system for more information about parental ratings.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="system" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        Parental rating age in year.
                        0 years => No restriction.
                        Also see http://en.wikipedia.org/wiki/Motion_picture_rating_system for
                        more information.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="value" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        Rating code for the system.
                        - tv4-group - 18 [age in years]
                        - sweden - 15
                        - c-more - PURPLE
                        - mppa - PG
                        - bbfc - 15
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="country" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Two char country code according to ISO 3166-1-alpha-2.
                        Empty or absent country attribute has the meaning that it is global default value for any country.
                        Specific country declaration overrides the default.
                        If country value is repeated, result is undefined which one to select.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="tagListType">
        <xs:sequence>
            <xs:element name="tag" type="tagging:tagReferenceType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="simpleTitleType">
        <xs:simpleContent>
            <xs:restriction base="simpleTextType">
                <xs:maxLength value="100"/>
            </xs:restriction>
        </xs:simpleContent>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="titleType">
        <xs:simpleContent>
            <xs:extension base="untypedTitleType">
                <xs:attribute name="type" type="titleTypeType">
                    <xs:annotation>
                        <xs:documentation>Marks a title as the original title
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!-- -->
    <xs:simpleType name="titleTypeType">
        <xs:annotation>
            <xs:documentation>
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="press"/>
            <xs:enumeration value="original"/>
            <xs:enumeration value="episode"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- -->
    <xs:complexType name="untypedTitleType">
        <xs:simpleContent>
            <xs:restriction base="localizedTextType">
                <xs:maxLength value="300"/>
            </xs:restriction>
        </xs:simpleContent>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="descriptionType">
        <xs:simpleContent>
            <xs:extension base="untypedDescriptionType">
                <xs:attribute name="length" type="descriptionLengthType" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!-- -->
    <xs:simpleType name="descriptionLengthType">
        <xs:annotation>
            <xs:documentation>length (and content) of the description e.g, tiny may be 1-25 characters, short
                26-140,medium
                141-240, long 241-999, extended > 1000
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <!-- TODO: unused -->
            <xs:enumeration value="slug"/>
            <xs:enumeration value="tiny"/>
            <xs:enumeration value="short"/>
            <xs:enumeration value="medium"/>
            <xs:enumeration value="long"/>
            <xs:enumeration value="extended"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- -->
    <xs:complexType name="untypedDescriptionType">
        <xs:simpleContent>
            <xs:restriction base="localizedTextType">
                <xs:maxLength value="3000"/>
            </xs:restriction>
        </xs:simpleContent>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="localizedTextType">
        <xs:annotation>
            <xs:documentation>Localized text element with language attribute.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="language" type="xs:language">
                    <xs:annotation>
                        <xs:documentation>code in ISO 639-1</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="creditListType">
        <xs:sequence>
            <xs:element name="credit" type="creditType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="creditType">
        <xs:sequence>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="rolename" type="xs:string" minOccurs="0"/>
            <xs:element name="function" type="xs:string"/>
            <xs:element name="externalReferenceList" type="common:externalReferenceListType" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>List of externalReference
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="imageListType">
        <xs:annotation>
            <xs:documentation>priority attribute on image element indicate "sort order", lower priority number means
                higher importance.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="image" type="typePrioGroupedImageType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <!-- -->
    <xs:simpleType name="imageTypeType">
        <xs:annotation>
            <xs:documentation>Type of image, initial intended usage for the image from source system.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="poster"/>
            <xs:enumeration value="landscape"/>
            <xs:enumeration value="cinemascope"/>
            <xs:enumeration value="logohometeam"/>
            <xs:enumeration value="logoawayteam"/>
            <xs:enumeration value="banner"/>
            <xs:enumeration value="other"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- -->
    <xs:complexType name="simpleImageType">
        <xs:sequence>
            <xs:element name="url" type="xs:anyURI"/>
            <xs:element name="caption" type="xs:string" minOccurs="0"/>
            <xs:element name="copyright" type="xs:string" minOccurs="0"/>
            <xs:element name="width" type="xs:int" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>In unit px.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="height" type="xs:int" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>In unit px.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="localizedSimpleImageType">
        <xs:complexContent>
            <xs:extension base="simpleImageType">
                <xs:attribute name="language" type="xs:language" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="typePrioGroupedImageType">
        <xs:sequence>
            <xs:element name="default" type="simpleImageType" minOccurs="0"/>
            <xs:element name="localizations" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="localized" type="localizedSimpleImageType" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="imageTypeType"/>
        <xs:attribute name="prio" type="xs:unsignedShort">
            <xs:annotation>
                <xs:documentation>Lower priority number means higher importance.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="languageListType">
        <xs:sequence>
            <xs:element name="language" type="xs:language" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>Language code in ISO 639-1</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="genreListType">
        <xs:sequence>
            <xs:element name="genre" type="genreType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>
    <!-- -->
    <xs:complexType name="genreType">
		<xs:annotation>
			<xs:documentation> Two levels of genres are supported: mainGenre and
				subGenre.
				Genre is not to be confused with "Category" that is a classification code defined as tags.
                Genre is typically provided by external parties, e.g. IMDB.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="mainGenre" type="xs:string" />
			<xs:element name="subGenre" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
    <!-- -->
    <xs:complexType name="simpleTextType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="language" type="xs:language">
					<xs:annotation>
						<xs:documentation>code in ISO 639-1</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
    <!-- -->
    <xs:complexType name="brandListType">
		<xs:sequence>
			<xs:element name="brand" type="brandType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>content for this event, optional. if not set contentIdRef must be set
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
    <!-- -->
    <xs:complexType name="seasonListType">
		<xs:sequence>
			<xs:element name="season" type="seasonType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>content for this event, optional. if not set contentIdRef must be set
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
    <!-- -->
    <xs:complexType name="contentListType">
		<xs:sequence>
			<xs:element name="content" type="contentType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Content for this event, optional. if not set contentIdRef must be set
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
